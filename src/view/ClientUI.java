/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Actor.Actor;
import java.awt.Color;
import java.awt.GridLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.border.LineBorder;
import messegeControlle.MapControl;
import Actor.Brick;
//import Actor.Cell;
import Actor.CoinPack;
import Actor.LifePack;
import Actor.Player;
import observer.MapObserver;
import tank.TankClient;

/**
 *
 * @author Buddhi
 */
public class ClientUI extends javax.swing.JFrame implements MapObserver {

    /**
     * Creates new form ClientUI
     */
    private JLabel[][] labels = new JLabel[10][10];
//    private JPanel[][] labels = new JPanel[10][10];
    private TankClient cli;
    private MapControl mc;

    public ClientUI() {
        initComponents();
    }

    public ClientUI(TankClient client, MapControl mapControl) {
        initComponents();

        this.cli = client;
        this.mc = mapControl;

        //sets the array of labels        
        labelPanel.setSize(400, 400);
        labelPanel.setMaximumSize(labelPanel.getSize());
        labelPanel.setLayout(new GridLayout(10, 10));
        labelPanel.revalidate();

        ImageIcon grass = new ImageIcon("src/src/images/grass.jpg");
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
//                create the set of jlabels
                JLabel label = new JLabel();
                label.setSize(100, 40);
                label.setIcon(grass);
                label.setBorder(new LineBorder(Color.white));
                label.setOpaque(true);
                label.revalidate();
                labels[i][j] = label;
                labelPanel.add(labels[i][j]);
            }
        }

//        File f = new File("src/images/text.txt");
//        try {
//            f.createNewFile();
//        } catch (IOException ex) {
//            Logger.getLogger(ClientUI.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        System.out.println(f.getPath());
//        System.out.println(f.exists());
//        ImageIcon image = new ImageIcon("src/images/grass.jpg");
//        for (int i = 0; i < 10; i++) {
//            for (int j = 0; j < 10; j++) {
//                ImageIcon ii = null;
//                if (map[i][j].getCellObject() != null) {
////                if (map[i][j].getCellObject() == null) {
//////                    labels[i][j].setBackground(Color.white);
////                    ii = new ImageIcon("src/images/grass.jpg");
////                } 
////                else 
//                
//                if ("B".equals(map[i][j].getCellObject().toString())) {
////                    labels[i][j].setBackground(Color.red);
//                    ii = new ImageIcon("src/images/bricks.jpg");
//                }
////                else if ("W".equals(map[i][j].getCellObject().toString())) {
//////                    labels[i][j].setBackground(Color.blue);
////                    ii = new ImageIcon("src/images/water.jpg");
////                }
////                else 
////                    if ("S".equals(map[i][j].getCellObject().toString())) {
//////                    labels[i][j].setBackground(Color.black);
////                    ii = new ImageIcon("src/images/stone.jpg");
////                } 
//                    else if ("C".equals(labels[i][j].getCellObject().toString())) {
////                    labels[i][j].setBackground(Color.cyan);
//                    ii = new ImageIcon("src/images/grass.jpg");
//                } else if ("L".equals(labels[i][j].getCellObject().toString())) {
////                    labels[i][j].setBackground(Color.pink);
//                    ii = new ImageIcon("src/images/grass.jpg");
//                } else if (labels[i][j].getCellObject().toString().startsWith("P")) {
////                    labels[i][j].setBackground(Color.yellow);
//                    ii = new ImageIcon("src/images/grass.jpg");
//                }
//
//                labels[i][j].setIcon(ii);
//                }
//            }
//        }
        setResizable(false);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        detailsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        brickCountLabel = new javax.swing.JLabel();
        stoneCountLabel = new javax.swing.JLabel();
        waterCountLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        player1coins = new javax.swing.JLabel();
        player2coins = new javax.swing.JLabel();
        player3coins = new javax.swing.JLabel();
        player4coins = new javax.swing.JLabel();
        player5coins = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        player1points = new javax.swing.JLabel();
        player2points = new javax.swing.JLabel();
        player3points = new javax.swing.JLabel();
        player4points = new javax.swing.JLabel();
        player5points = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        player1health = new javax.swing.JLabel();
        player2health = new javax.swing.JLabel();
        player3health = new javax.swing.JLabel();
        player4health = new javax.swing.JLabel();
        player5health = new javax.swing.JLabel();
        labelPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Tank-It Game Client v1.0");

        detailsPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel2.setText("Details");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 51, 0));
        jLabel3.setText("Bricks");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Stone");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 153));
        jLabel5.setText("Water");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setText("Coin");

        brickCountLabel.setText(" ");

        stoneCountLabel.setText(" ");

        waterCountLabel.setText(" ");

        jLabel10.setText(" ");

        javax.swing.GroupLayout detailsPanelLayout = new javax.swing.GroupLayout(detailsPanel);
        detailsPanel.setLayout(detailsPanelLayout);
        detailsPanelLayout.setHorizontalGroup(
                detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, detailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, detailsPanelLayout.createSequentialGroup()
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(brickCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                                                .addComponent(stoneCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(waterCountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
        );
        detailsPanelLayout.setVerticalGroup(
                detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(detailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(brickCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(stoneCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(waterCountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(detailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel10))
                        .addContainerGap(92, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel7.setText("Player 1");

        jLabel8.setText("Player 2");

        jLabel9.setText("Player 3");

        jLabel11.setText("Player 4");

        jLabel12.setText("Player 5");

        player1coins.setText("0");

        player2coins.setText("0");

        player3coins.setText("0");

        player4coins.setText("0");

        player5coins.setText("0");

        jLabel13.setText("Coins");

        jLabel14.setText("Points");

        player1points.setText("0");

        player2points.setText("0");

        player3points.setText("0");

        player4points.setText("0");

        player5points.setText("0");

        jLabel15.setText("Health");

        player1health.setText("0%");

        player2health.setText("0%");

        player3health.setText("0%");

        player4health.setText("0%");

        player5health.setText("0%");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(player4coins, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player3coins, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player2coins, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                .addComponent(player1coins, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player5coins, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                                .addComponent(player1points, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player2points, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player3points, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player4points, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(player5points, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(player1health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(player2health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(player3health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(player4health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(player5health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14)
                                .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(player1coins)
                                .addComponent(player1points)
                                .addComponent(player1health))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(player2coins)
                                .addComponent(player2points)
                                .addComponent(player2health))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9)
                                .addComponent(player3coins)
                                .addComponent(player3points)
                                .addComponent(player3health))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(player4coins)
                                .addComponent(player4points)
                                .addComponent(player4health))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(player5coins)
                                .addComponent(player5points)
                                .addComponent(player5health))
                        .addContainerGap(144, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(detailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(detailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        labelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout labelPanelLayout = new javax.swing.GroupLayout(labelPanel);
        labelPanel.setLayout(labelPanelLayout);
        labelPanelLayout.setHorizontalGroup(
                labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 510, Short.MAX_VALUE)
        );
        labelPanelLayout.setVerticalGroup(
                labelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased

    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel brickCountLabel;
    private javax.swing.JPanel detailsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel labelPanel;
    private javax.swing.JLabel player1coins;
    private javax.swing.JLabel player1health;
    private javax.swing.JLabel player1points;
    private javax.swing.JLabel player2coins;
    private javax.swing.JLabel player2health;
    private javax.swing.JLabel player2points;
    private javax.swing.JLabel player3coins;
    private javax.swing.JLabel player3health;
    private javax.swing.JLabel player3points;
    private javax.swing.JLabel player4coins;
    private javax.swing.JLabel player4health;
    private javax.swing.JLabel player4points;
    private javax.swing.JLabel player5coins;
    private javax.swing.JLabel player5health;
    private javax.swing.JLabel player5points;
    private javax.swing.JLabel stoneCountLabel;
    private javax.swing.JLabel waterCountLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void updateInterface(Actor map[][], Player[] players) {
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                ImageIcon ii = null;
//                if (map[i][j].getCellObject() != null) {
                if (map[i][j].getType() == "E") {
//                    labels[i][j].setBackground(Color.white);
                    ii = new ImageIcon("src/images/grass.jpg");
                    labels[i][j].setToolTipText(null);
                } else if ("B".equals(map[i][j].getType())) {
//                    labels[i][j].setBackground(Color.red);
                    Brick b = (Brick) map[i][j];
                    if (b.getHealth() == 100) {
                        ii = new ImageIcon("src/images/bricks100.jpg");
                    } else if (b.getHealth() == 75) {
                        ii = new ImageIcon("src/images/bricks75.jpg");
                    } else if (b.getHealth() == 50) {
                        ii = new ImageIcon("src/images/bricks50.jpg");
                    } else if (b.getHealth() == 25) {
                        ii = new ImageIcon("src/images/bricks25.jpg");
                    } else {
                        ii = new ImageIcon("src/images/grass.jpg");
                    }

                } else if ("W".equals(map[i][j].getType())) {
//                    labels[i][j].setBackground(Color.blue);
                    ii = new ImageIcon("src/images/water.jpg");
                } else if ("S".equals(map[i][j].getType())) {
//                    labels[i][j].setBackground(Color.black);
                    ii = new ImageIcon("src/images/stone.jpg");
                } else if ("C".equals(map[i][j].getType())) {
//                    labels[i][j].setBackground(Color.cyan);
                    ii = new ImageIcon("src/images/coins.jpg");

                    CoinPack cp = (CoinPack) map[i][j];
                    String tooltip = "Value: " + cp.getAmount() + " Duration: " + cp.getDuration();

                    labels[i][j].setToolTipText(tooltip);
                } else if ("L".equals(map[i][j].getType())) {
//                    labels[i][j].setBackground(Color.pink);
                    ii = new ImageIcon("src/images/lifepack.jpg");

                    LifePack lp = (LifePack) map[i][j];
                    String tooltip = "Duration: " + lp.getDuration();

                    labels[i][j].setToolTipText(tooltip);
                } else if (map[i][j].getType() == "T") {
//                    labels[i][j].setBackground(Color.yellow);
                    Player p = (Player) map[i][j];
                    int number = Integer.parseInt(Character.toString(p.getName().charAt(1)));
                    int direction = p.getDirection();

//                    set tank images
                    switch (direction) {
                        case 0:
                            ii = new ImageIcon("src/images/P" + number + "-tank-up.jpg");
                            break;
                        case 1:
                            ii = new ImageIcon("src/images/P" + number + "-tank-right.jpg");
                            break;
                        case 2:
                            ii = new ImageIcon("src/images/P" + number + "-tank-down.jpg");
                            break;
                        case 3:
                            ii = new ImageIcon("src/images/P" + number + "-tank-left.jpg");
                            break;
                    }
                }

                labels[i][j].setIcon(ii);

            }
        }
        labelPanel.revalidate();

//        set stones, bricks and water count

        if (players[0] != null) {
            player1coins.setText(players[0].getCoins() + "");
            player1points.setText(players[0].getPoints() + "");
            player1health.setText(players[0].getHealth() + "%");
        }
        if (players[1] != null) {
            player2coins.setText(players[1].getPoints() + "");
            player2points.setText(players[1].getPoints() + "");
            player2health.setText(players[1].getHealth() + "%");
        }
        if (players[2] != null) {
            player3coins.setText(players[2].getPoints() + "");
            player3points.setText(players[2].getPoints() + "");
            player3health.setText(players[2].getHealth() + "%");
        }
        if (players[3] != null) {
            player4coins.setText(players[3].getPoints() + "");
            player4points.setText(players[3].getPoints() + "");
            player4health.setText(players[3].getHealth() + "%");
        }
        if (players[4] != null) {
            player5coins.setText(players[4].getPoints() + "");
            player5points.setText(players[4].getPoints() + "");
            player5health.setText(players[4].getHealth() + "%");
        }
    }
}
